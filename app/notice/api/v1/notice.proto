syntax = "proto3";

package notice.rpc.v1;

option go_package = "/v1";

enum NoticeSendBizTypeOption {
    Unknown         = 0;  // Unknown
    DepositSuccess  = 1;  // DepositSuccess
    DepositFail     = 2;  // DepositFail
    WithdrawSuccess = 3;  // WithdrawSuccess
    WithdrawFail    = 4;  // WithdrawFail
}

enum RegisterTypeOption {
    RegisterTypeUnknown = 0;  // Unknown
    RegisterWithMobile  = 1;  // RegisterWithMobile
    RegisterWithEmail   = 2;  // RegisterWithEmail
}

message NoticeSendReq {
    NoticeSendBizTypeOption biz_type = 1;
    RegisterTypeOption register_type = 2;
    string amount                    = 3;
    string currency                  = 4;
    repeated string to               = 5;
    string charge_no                 = 6;
}

message NoticeSendResp {
    bool success        = 1;
    string status       = 2;
    string date_created = 3;
}

enum AlertGroupOptions {
    DefaultGroup = 0;
    BctsTestEnv  = 1;
}

enum AlertMsgTypeOPtions {
    MsgTypeDefault          = 0;
    MsgTypeText             = 1;
    MsgTypeLink             = 2;
    MsgTypeMarkdown         = 3;
    MsgTypeActionCard       = 4;
    MsgTypeActionCardSingle = 5;
    MsgTypeFeedCard         = 6;
}

message TextMsg {
    string content = 1;
}

message LinkMsg {
    string title       = 1;
    string text        = 2;
    string message_url = 3;
    string pic_url     = 4;
}

message MarkdownMsg {
    string title = 1;
    string text  = 2;
}

enum BtnOrientationOptions {
    BtnOrientationVertical   = 0;
    BtnOrientationHorizontal = 1;
}

message ActionCardSingleMsg {
    string title                          = 1;
    string text                           = 2;
    string single_title                   = 3;
    string single_url                     = 4;
    BtnOrientationOptions btn_orientation = 5;
}

message ActionCardMsg {
    string title                          = 1;
    string text                           = 2;
    repeated ActionCardBtns btns          = 3;
    BtnOrientationOptions btn_orientation = 4;
}

message ActionCardBtns {
    string title      = 1;
    string action_url = 2;
}

message FeedCardMsg {
    repeated FeedCardLink links = 1;
}

message FeedCardLink {
    string title       = 1;
    string message_url = 2;
    string pic_url     = 3;
}

message AlertSendReq {
    AlertGroupOptions group                = 1;
    repeated string at                     = 2;
    bool is_at_all                         = 3;
    AlertMsgTypeOPtions msg_type           = 4;
    TextMsg text                           = 5;
    LinkMsg link                           = 6;
    MarkdownMsg markdown                   = 7;
    ActionCardSingleMsg action_card_single = 8;
    ActionCardMsg action_card              = 9;
    FeedCardMsg feed_card                  = 10;
}

message AlertSendResp {
    int32 errcode = 1;
    string errmsg = 2;
}

//service
service Notice {
    rpc Send(NoticeSendReq) returns (NoticeSendResp);
    rpc Alert(AlertSendReq) returns (AlertSendResp);
}
