// Code generated by goctl. DO NOT EDIT!
// Source: dataService.proto

package server

import (
	"context"

	"market_server/app/dataService/rpc/internal/logic"
	"market_server/app/dataService/rpc/internal/svc"
	"market_server/app/dataService/rpc/types/pb"
)

type DataServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedDataServiceServer
}

func NewDataServiceServer(svcCtx *svc.ServiceContext) *DataServiceServer {
	return &DataServiceServer{
		svcCtx: svcCtx,
	}
}

// 获取合约参数
func (s *DataServiceServer) GetSymbol(ctx context.Context, in *pb.GetSymbolReq) (*pb.GetSymbolRsp, error) {
	l := logic.NewGetSymbolLogic(ctx, s.svcCtx)
	return l.GetSymbol(in)
}

// 获取币种参数
func (s *DataServiceServer) GetCurrency(ctx context.Context, in *pb.GetCurrencyReq) (*pb.GetCurrencyRsp, error) {
	l := logic.NewGetCurrencyLogic(ctx, s.svcCtx)
	return l.GetCurrency(in)
}

// 获取用户交易手续费
func (s *DataServiceServer) GetUserFeeInfo(ctx context.Context, in *pb.GetUserFeeInfoReq) (*pb.GetUserFeeInfoRsp, error) {
	l := logic.NewGetUserFeeInfoLogic(ctx, s.svcCtx)
	return l.GetUserFeeInfo(in)
}

// 发布参数
func (s *DataServiceServer) PublishNacosConfig(ctx context.Context, in *pb.PublishNacosConfig) (*pb.DSEmpty, error) {
	l := logic.NewPublishNacosConfigLogic(ctx, s.svcCtx)
	return l.PublishNacosConfig(in)
}

// 删除参数
func (s *DataServiceServer) DeleteNacosConfig(ctx context.Context, in *pb.DeleteNacosConfig) (*pb.DSEmpty, error) {
	l := logic.NewDeleteNacosConfigLogic(ctx, s.svcCtx)
	return l.DeleteNacosConfig(in)
}
