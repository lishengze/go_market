// Code generated by goctl. DO NOT EDIT!
// Source: idsrv.proto

package idsrv

import (
	"context"
	"github.com/zeromicro/go-zero/core/logx"
	"time"

	"exterior-interactor/app/idsrv/rpc/idsrvpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	EmptyReq = idsrvpb.EmptyReq
	GetIdRsp = idsrvpb.GetIdRsp

	IdSrv interface {
		GetId(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*GetIdRsp, error)
		MustGetId() string
	}

	defaultIdSrv struct {
		cli zrpc.Client
	}
)

func NewIdSrv(cli zrpc.Client) IdSrv {
	return &defaultIdSrv{
		cli: cli,
	}
}

func (m *defaultIdSrv) GetId(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*GetIdRsp, error) {
	client := idsrvpb.NewIdSrvClient(m.cli.Conn())
	return client.GetId(ctx, in, opts...)
}

func (m *defaultIdSrv) MustGetId() string {
	for {
		rsp, err := m.GetId(context.Background(), &EmptyReq{})
		if err != nil {
			logx.Infof("get id err:%s", err)
			time.Sleep(time.Millisecond * 100)
			continue
		}
		return rsp.Id
	}
}
