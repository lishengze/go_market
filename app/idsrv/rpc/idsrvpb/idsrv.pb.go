// Code generated by protoc-gen-go. DO NOT EDIT.
// source: idsrv.proto

package idsrvpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmptyReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmptyReq) Reset()         { *m = EmptyReq{} }
func (m *EmptyReq) String() string { return proto.CompactTextString(m) }
func (*EmptyReq) ProtoMessage()    {}
func (*EmptyReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_93cd36983a7250be, []int{0}
}

func (m *EmptyReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmptyReq.Unmarshal(m, b)
}
func (m *EmptyReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmptyReq.Marshal(b, m, deterministic)
}
func (m *EmptyReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmptyReq.Merge(m, src)
}
func (m *EmptyReq) XXX_Size() int {
	return xxx_messageInfo_EmptyReq.Size(m)
}
func (m *EmptyReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EmptyReq.DiscardUnknown(m)
}

var xxx_messageInfo_EmptyReq proto.InternalMessageInfo

type GetIdRsp struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetIdRsp) Reset()         { *m = GetIdRsp{} }
func (m *GetIdRsp) String() string { return proto.CompactTextString(m) }
func (*GetIdRsp) ProtoMessage()    {}
func (*GetIdRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_93cd36983a7250be, []int{1}
}

func (m *GetIdRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetIdRsp.Unmarshal(m, b)
}
func (m *GetIdRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetIdRsp.Marshal(b, m, deterministic)
}
func (m *GetIdRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetIdRsp.Merge(m, src)
}
func (m *GetIdRsp) XXX_Size() int {
	return xxx_messageInfo_GetIdRsp.Size(m)
}
func (m *GetIdRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetIdRsp.DiscardUnknown(m)
}

var xxx_messageInfo_GetIdRsp proto.InternalMessageInfo

func (m *GetIdRsp) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func init() {
	proto.RegisterType((*EmptyReq)(nil), "idsrvpb.EmptyReq")
	proto.RegisterType((*GetIdRsp)(nil), "idsrvpb.GetIdRsp")
}

func init() {
	proto.RegisterFile("idsrv.proto", fileDescriptor_93cd36983a7250be)
}

var fileDescriptor_93cd36983a7250be = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x4c, 0x29, 0x2e,
	0x2a, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x07, 0x73, 0x0a, 0x92, 0x94, 0xb8, 0xb8,
	0x38, 0x5c, 0x73, 0x0b, 0x4a, 0x2a, 0x83, 0x52, 0x0b, 0x95, 0xa4, 0xb8, 0x38, 0xdc, 0x53, 0x4b,
	0x3c, 0x53, 0x82, 0x8a, 0x0b, 0x84, 0xf8, 0xb8, 0x98, 0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35,
	0x38, 0x83, 0x98, 0x32, 0x53, 0x8c, 0xcc, 0xb8, 0x58, 0x3d, 0x53, 0x82, 0x8b, 0xca, 0x84, 0x74,
	0xb9, 0x58, 0xc1, 0x8a, 0x84, 0x04, 0xf5, 0xa0, 0x66, 0xe8, 0xc1, 0x0c, 0x90, 0x42, 0x08, 0xc1,
	0xcc, 0x49, 0x62, 0x03, 0xdb, 0x67, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x28, 0xf0, 0xff,
	0x7e, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// IdSrvClient is the client API for IdSrv service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type IdSrvClient interface {
	GetId(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*GetIdRsp, error)
}

type idSrvClient struct {
	cc grpc.ClientConnInterface
}

func NewIdSrvClient(cc grpc.ClientConnInterface) IdSrvClient {
	return &idSrvClient{cc}
}

func (c *idSrvClient) GetId(ctx context.Context, in *EmptyReq, opts ...grpc.CallOption) (*GetIdRsp, error) {
	out := new(GetIdRsp)
	err := c.cc.Invoke(ctx, "/idsrvpb.IdSrv/GetId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// IdSrvServer is the server API for IdSrv service.
type IdSrvServer interface {
	GetId(context.Context, *EmptyReq) (*GetIdRsp, error)
}

// UnimplementedIdSrvServer can be embedded to have forward compatible implementations.
type UnimplementedIdSrvServer struct {
}

func (*UnimplementedIdSrvServer) GetId(ctx context.Context, req *EmptyReq) (*GetIdRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetId not implemented")
}

func RegisterIdSrvServer(s *grpc.Server, srv IdSrvServer) {
	s.RegisterService(&_IdSrv_serviceDesc, srv)
}

func _IdSrv_GetId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(IdSrvServer).GetId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/idsrvpb.IdSrv/GetId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(IdSrvServer).GetId(ctx, req.(*EmptyReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _IdSrv_serviceDesc = grpc.ServiceDesc{
	ServiceName: "idsrvpb.IdSrv",
	HandlerType: (*IdSrvServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetId",
			Handler:    _IdSrv_GetId_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "idsrv.proto",
}
