// Code generated by goctl. DO NOT EDIT!
// Source: pms.proto

package pms

import (
	"context"

	"bcts/app/pms/rpc/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AccountAnalysisReq           = pb.AccountAnalysisReq
	AccountAnalysisRsp           = pb.AccountAnalysisRsp
	Benchmark                    = pb.Benchmark
	CreatePortfolioInvestmentReq = pb.CreatePortfolioInvestmentReq
	CreatePortfolioInvestmentRsp = pb.CreatePortfolioInvestmentRsp
	DateValue                    = pb.DateValue
	DeletePortfolioInvestmentReq = pb.DeletePortfolioInvestmentReq
	EmptyReq                     = pb.EmptyReq
	EmptyRsp                     = pb.EmptyRsp
	GroupedDetail                = pb.GroupedDetail
	GroupedInvstment             = pb.GroupedInvstment
	Investment                   = pb.Investment
	PortfolioInvestmentDetail    = pb.PortfolioInvestmentDetail
	PortfolioInvestmentListReq   = pb.PortfolioInvestmentListReq
	PortfolioInvestmentListRsp   = pb.PortfolioInvestmentListRsp
	PortfolioPerformanceReq      = pb.PortfolioPerformanceReq
	PortfolioPerformanceRsp      = pb.PortfolioPerformanceRsp
	UpdatePortfolioInvestmentReq = pb.UpdatePortfolioInvestmentReq

	Pms interface {
		CreatePortfolioInvestment(ctx context.Context, in *CreatePortfolioInvestmentReq, opts ...grpc.CallOption) (*EmptyRsp, error)
		DeletePortfolioInvestment(ctx context.Context, in *DeletePortfolioInvestmentReq, opts ...grpc.CallOption) (*EmptyRsp, error)
		UpdatePortfolioInvestment(ctx context.Context, in *UpdatePortfolioInvestmentReq, opts ...grpc.CallOption) (*EmptyRsp, error)
		GetPortfolioInvestmentList(ctx context.Context, in *PortfolioInvestmentListReq, opts ...grpc.CallOption) (*PortfolioInvestmentListRsp, error)
		//  资产列表
		GetAccountAnalysis(ctx context.Context, in *AccountAnalysisReq, opts ...grpc.CallOption) (*AccountAnalysisRsp, error)
		//  资产收益率
		GetPortfolioPerformance(ctx context.Context, in *PortfolioPerformanceReq, opts ...grpc.CallOption) (*PortfolioPerformanceRsp, error)
	}

	defaultPms struct {
		cli zrpc.Client
	}
)

func NewPms(cli zrpc.Client) Pms {
	return &defaultPms{
		cli: cli,
	}
}

func (m *defaultPms) CreatePortfolioInvestment(ctx context.Context, in *CreatePortfolioInvestmentReq, opts ...grpc.CallOption) (*EmptyRsp, error) {
	client := pb.NewPmsClient(m.cli.Conn())
	return client.CreatePortfolioInvestment(ctx, in, opts...)
}

func (m *defaultPms) DeletePortfolioInvestment(ctx context.Context, in *DeletePortfolioInvestmentReq, opts ...grpc.CallOption) (*EmptyRsp, error) {
	client := pb.NewPmsClient(m.cli.Conn())
	return client.DeletePortfolioInvestment(ctx, in, opts...)
}

func (m *defaultPms) UpdatePortfolioInvestment(ctx context.Context, in *UpdatePortfolioInvestmentReq, opts ...grpc.CallOption) (*EmptyRsp, error) {
	client := pb.NewPmsClient(m.cli.Conn())
	return client.UpdatePortfolioInvestment(ctx, in, opts...)
}

func (m *defaultPms) GetPortfolioInvestmentList(ctx context.Context, in *PortfolioInvestmentListReq, opts ...grpc.CallOption) (*PortfolioInvestmentListRsp, error) {
	client := pb.NewPmsClient(m.cli.Conn())
	return client.GetPortfolioInvestmentList(ctx, in, opts...)
}

//  资产列表
func (m *defaultPms) GetAccountAnalysis(ctx context.Context, in *AccountAnalysisReq, opts ...grpc.CallOption) (*AccountAnalysisRsp, error) {
	client := pb.NewPmsClient(m.cli.Conn())
	return client.GetAccountAnalysis(ctx, in, opts...)
}

//  资产收益率
func (m *defaultPms) GetPortfolioPerformance(ctx context.Context, in *PortfolioPerformanceReq, opts ...grpc.CallOption) (*PortfolioPerformanceRsp, error) {
	client := pb.NewPmsClient(m.cli.Conn())
	return client.GetPortfolioPerformance(ctx, in, opts...)
}
