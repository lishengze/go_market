syntax = "proto3";

package pb;

option go_package="./pb";

message EmptyReq {
}

message EmptyRsp {
}

message CreatePortfolioInvestmentReq {
  enum Grouping {
    ALL = 0;
    PUBLIC = 1;
    PRIVATE = 2;
}
  int64  UserID = 1;
  string PortfolioName = 2;
  string Remark = 3;
  repeated string  Investments = 4;
  Grouping  GroupType = 5;
}

message CreatePortfolioInvestmentRsp {
  int64  Id = 1;
}

message DeletePortfolioInvestmentReq {
  int64 Id = 1;
}

message UpdatePortfolioInvestmentReq {
  int64 Id = 1;
  int64  UserID = 2;
  string PortfolioName = 3;
  string  Remark = 4;
  repeated string  Investments = 5;
}

message PortfolioInvestmentListReq {
  enum Grouping {
    ALL = 0;
    PUBLIC = 1;
    PRIVATE = 2;
}
//组名和备注
  string SearchContent = 1;
  Grouping  GroupType = 2;
}

message PortfolioInvestmentDetail {
  int64 Id = 1;
  string Name = 2;
  string  Remark = 3;
  repeated string  Investments = 4;
  string Operator = 5;
  string Updated = 6;
  string Created = 7;
}

message PortfolioInvestmentListRsp {
  repeated PortfolioInvestmentDetail Details = 1;
}

enum Klines {
  K_7D = 0;
  K_MTD = 1;
  K_1M = 2;
  K_YTD = 3;
  K_1Y = 4;
}

message PortfolioPerformanceReq {
  int64 UserID = 1;
  Klines Kline = 2;
}

message DateValue {
  string DateTime = 1;
  string Rate = 2;
}

message Benchmark {
  repeated DateValue Benchmark = 1;
}

message PortfolioPerformanceRsp {
  map<string, Benchmark> Benchmark = 1;
  map<string, Benchmark> CumulativeBenchmarks = 2;
  repeated DateValue CumulativePerformance = 3;
  repeated DateValue DailyPerformance = 4;
  map<string, string> ReturnRate = 5;
}

message Investment {
  string CoinUnit = 1;
  string Position = 2;
  string CostBasis = 3;
  string LastPrice = 4;
  string MarketValue = 5;
  string MarketValuePercent = 6;
  string DailyChange = 7;
  string DailyProfit = 8;
  string Unrealized_profit = 9;
  string Unrealized_profit_percent = 10;
  string EarlierPrice = 11;
  string DailyProfitAndLoss = 12;
  string RealizedProfitAndLoss = 13;
}

message GroupedDetail {
  int64 UserID = 1;
  string Name = 2;
  string Attribute = 3;
  repeated Investment  Symbols = 5;
}

message GroupedInvstment {
  repeated GroupedDetail detail = 1;
}

message AccountAnalysisReq {
  int64 UserID = 1;
  bool  IsGrouped = 2;
}

message AccountAnalysisRsp {
  map<string, GroupedInvstment> Investments = 1;
  string NetLiquidation = 2;
  string DailyChange = 3;
  string DailyProfit = 4;
  string DailyUnrealizedProfit = 5;
  string UnrealizedProfitPercent = 6;
}

service Pms {
  rpc createPortfolioInvestment(CreatePortfolioInvestmentReq) returns(EmptyRsp);
  rpc deletePortfolioInvestment(DeletePortfolioInvestmentReq) returns(EmptyRsp);
  rpc updatePortfolioInvestment(UpdatePortfolioInvestmentReq) returns(EmptyRsp);
  rpc getPortfolioInvestmentList(PortfolioInvestmentListReq) returns(PortfolioInvestmentListRsp);
  // 资产列表
  rpc GetAccountAnalysis(AccountAnalysisReq) returns (AccountAnalysisRsp);
  // 资产收益率
  rpc getPortfolioPerformance(PortfolioPerformanceReq) returns(PortfolioPerformanceRsp);
}
