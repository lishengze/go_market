// Code generated by goctl. DO NOT EDIT!
// Source: api.proto

package hedge

import (
	"context"

	"market_server/app/hedge/cmd/rpc/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	OrderReq = pb.OrderReq
	OrderRsp = pb.OrderRsp

	Hedge interface {
		CreateOrder(ctx context.Context, in *OrderReq, opts ...grpc.CallOption) (*OrderRsp, error)
	}

	defaultHedge struct {
		cli zrpc.Client
	}
)

func NewHedge(cli zrpc.Client) Hedge {
	return &defaultHedge{
		cli: cli,
	}
}

func (m *defaultHedge) CreateOrder(ctx context.Context, in *OrderReq, opts ...grpc.CallOption) (*OrderRsp, error) {
	client := pb.NewHedgeClient(m.cli.Conn())
	return client.CreateOrder(ctx, in, opts...)
}
